# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V1PkVNswkMKpFMcjxowIKGSaS9toWULB
"""

!pip install streamlit transformers torch

import streamlit as st
from transformers import pipeline

# Load classifier (with caching for performance)
@st.cache_resource
def load_model():
    return pipeline("text-classification", model="nateraw/bert-base-uncased-emotion")

classifier = load_model()

# Emoji mappings
emoji_map = {
    'joy': '😊🌞🎉',
    'sadness': '😢💔🌧️',
    'anger': '😠🔥💣',
    'fear': '😱👻😨',
    'love': '❤️😍💌',
    'surprise': '😲🎁🤯'
}

# --- Streamlit UI ---
st.set_page_config(page_title="Emojify My Mood", page_icon="🎭")
st.title("🎭 Emojify My Mood")
st.write("Write a short diary entry and let AI turn it into a matching emoji vibe 🌈")

# User input
user_input = st.text_area("📝 Your diary entry:", height=150, placeholder="e.g. Today I felt unstoppable at the gym!")

# On button click
if st.button("🔍 Emojify!"):
    if not user_input.strip():
        st.warning("Please enter some text.")
    else:
        result = classifier(user_input)[0]
        emotion = result['label']
        confidence = result['score']
        emojis = emoji_map.get(emotion, '🤔❓')

        # Display results
        st.success(f"**Detected Emotion:** {emotion}  \n**Confidence:** {confidence:.2f}")
        st.markdown(f"<div style='font-size: 2.5em;'>{emojis}</div>", unsafe_allow_html=True)

        st.caption("AI-powered emotion detection with 🧠 Transformers")

!pip install streamlit transformers torch pyngrok

import os
os.environ["NGROK_AUTHTOKEN"] = "2yr7RINFACGLmd4OGQxgvRvKUFq_74RjH5X35bpLc4WCMoXVw"
!ngrok config add-authtoken $NGROK_AUTHTOKEN

!pip install streamlit transformers torch pyngrok --quiet

from pyngrok import ngrok

# (Optional) Add your ngrok authtoken
# !ngrok config add-authtoken YOUR_AUTHTOKEN_HERE

# Full working Streamlit app
app_code = """
import streamlit as st
from transformers import pipeline

@st.cache_resource
def load_model():
    return pipeline("text-classification", model="j-hartmann/emotion-english-distilroberta-base", return_all_scores=True)


classifier = load_model()

emoji_map = {
    'joy': '😊🌞🎉',
    'sadness': '😢💔🌧️',
    'anger': '😠🔥💣',
    'fear': '😱👻😨',
    'love': '❤️😍💌',
    'surprise': '😲🎁🤯'
}

st.set_page_config(page_title="Emojify My Mood", page_icon="🎭")
st.title("🎭 Emojify My Mood")
st.write("Write a short diary entry and let AI turn it into a matching emoji vibe 🌈")

user_input = st.text_area("📝 Your diary entry:", height=150, placeholder="e.g. Today I felt unstoppable at the gym!")

if st.button("🔍 Emojify!"):
    if not user_input.strip():
        st.warning("Please enter some text.")
    else:
        results = classifier(user_input)[0]  # list of scores
        results = classifier(user_input)[0]  # list of scores
        top = max(results, key=lambda x: x['score'])
        emotion = top['label']
        confidence = top['score']

        st.success(f\"""**Detected Emotion:** {emotion}
**Confidence:** {confidence:.2f}\""")
        st.markdown(f"<div style='font-size: 2.5em;'>{emojis}</div>", unsafe_allow_html=True)
"""

# Write app.py
with open("app.py", "w") as f:
    f.write(app_code)

# Start ngrok tunnel (http protocol on port 8501)
public_url = ngrok.connect("8501", proto="http")
print(f"🌐 Your app is live at: {public_url}")

# Launch the app
!streamlit run app.py &

